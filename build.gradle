import com.neo4j.gradle.s3.S3Plugin
import com.neo4j.gradle.s3.S3UploadTask
import org.asciidoctor.gradle.jvm.AsciidoctorTask
import org.asciidoctor.gradle.jvm.pdf.AsciidoctorPdfTask
import org.asciidoctor.gradle.jvm.slides.AsciidoctorJRevealJSTask
import org.kordamp.gradle.livereload.LiveReloadTask

plugins {
  id 'org.asciidoctor.jvm.gems' version '3.1.0' apply false
  id 'org.asciidoctor.jvm.convert' version '3.1.0' apply false
  id 'org.asciidoctor.jvm.pdf' version '3.1.0' apply false
  id 'org.asciidoctor.jvm.revealjs' version '3.1.0' apply false
  id 'org.kordamp.gradle.livereload' version '0.2.1' apply false
}

subprojects {

  apply plugin: 'org.asciidoctor.jvm.gems'
  apply plugin: 'org.asciidoctor.jvm.revealjs'
  apply plugin: S3Plugin

  dependencies {
    asciidoctorGems 'rubygems:rouge:3.13.0'
  }

  repositories {
    mavenCentral()
    jcenter()
    ruby {
      gems()
    }
  }

  s3 {
    profile = project.hasProperty('s3-profile') ? project.property('s3-profile') : 'default'
  }

  asciidoctorj {
    requires "${rootProject.projectDir}/resources/extensions.rb"
    attributes 'allow-uri-read': '',
      'env': project.hasProperty('env') ? project.property('env') : '',
      'source-highlighter': 'rouge',
      'rouge-style': 'neo.forest',
      'presenter': 'Neo Technology',
      'twitter': 'neo4j',
      'email': 'info@neotechnology.com',
      'neo4j-version': '4.0',
      'currentyear': '2020'
  }

  revealjs {
    version = '4.0.1'
    templateGitHub {
      organisation = 'hakimel'
      repository = 'reveal.js'
      tag = '3.9.2'
    }
  }

  revealjsPlugins {
    github 'denehyg', {
      organisation = 'denehyg'
      repository = 'reveal.js-menu'
      branch = 'master'
    }
  }


  task convertOnlineHtml(type: AsciidoctorTask) {
    dependsOn asciidoctorGemsPrepare

    inputs.dir "${rootProject.projectDir}/resources/templates"

    //noinspection GroovyAccessibility,GroovyAssignabilityCheck
    asciidoctorj {
      options template_dirs: ["${rootProject.projectDir}/resources/templates"]
      attributes 'imagesdir': 'images'
    }

    baseDir file("${projectDir}/docs")
    sourceDir file("${projectDir}/docs")
    outputDir file("${projectDir}/build/online")

    resources {
      from("${rootProject.projectDir}/resources/images") {
        include '**'
        into 'images'
      }
      from("${projectDir}/images") {
        include '**'
        into 'images'
      }
    }
  }

  task convertSlides(type: AsciidoctorJRevealJSTask) {
    dependsOn asciidoctorGemsPrepare

    revealjsOptions {
      controls = false
      progressBar = true
      pushToHistory = true
      overviewMode = true
      touchMode = true
      theme = 'white'
    }

    //noinspection GroovyAccessibility,GroovyAssignabilityCheck
    asciidoctorj {
      options template_dirs: ["${rootProject.projectDir}/resources/templates/slide"]
      attributes 'revealjs_customtheme': 'themes/reveal.css',
        'imagesdir': 'images',
        'revealjs_center': 'false',
        'revealjs_width': '1280',
        'revealjs_height': '720',
        'revealjs_margin': '0.05',
        'revealjs_fragmentinurl': 'true',
        'revealjs_slidenumber': 'c',
        'revealjs_minscale': '0.2',
        'revealjs_maxscale': '2'
    }

    plugins 'denehyg/menu.js'
    pluginConfigurationFile "${rootProject.projectDir}/resources/extensions/revealjs-extension-config.js"

    baseDirFollowsSourceDir()
    sourceDir file("${projectDir}/docs")
    outputDir file("${projectDir}/build/slides")

    resources {
      from("${rootProject.projectDir}/resources/themes") {
        include 'reveal.css'
        into 'themes'
      }
      from("${rootProject.projectDir}/resources/extensions") {
        include 'cypher-highlightjs.js'
        into 'extensions'
      }
      from("${rootProject.projectDir}/resources/images") {
        include '**'
        into 'images'
      }
      from("${projectDir}/images") {
        include '**'
        into 'images'
      }
    }
  }

  task convertOnlinePdf(type: AsciidoctorPdfTask) {
    dependsOn asciidoctorGemsPrepare

    inputs.file "${rootProject.projectDir}/resources/themes/pdf-theme.yml"

    //noinspection GroovyAccessibility,GroovyAssignabilityCheck
    asciidoctorj {
      modules.pdf.version '1.5.2'
      attributes 'pdf-style': "${rootProject.projectDir}/resources/themes/pdf-theme.yml",
        'imagesdir': '../images'
    }

    baseDir file("${projectDir}/docs")
    sourceDir file("${projectDir}/docs")
    outputDir file("${projectDir}/build/online")
  }

  task convert {
    dependsOn convertOnlineHtml
    dependsOn convertOnlinePdf
    dependsOn convertSlides
  }

  task liveReload(type: LiveReloadTask) {
    docRoot "${projectDir}/build"
  }

  if (new File("${projectDir}/images").exists()) {
    task s3UploadImages(type: S3UploadTask) {
      source = "${projectDir}/images"
      bucket = "dev.assets.neo4j.com"
      destination = "wp-content/uploads/online/graphdatabases"
    }
  }

  task s3UploadHtmlExclude(type: S3UploadTask) {
    source = fileTree(dir: "${projectDir}/build/online", excludes: ["images"])
    bucket = "training.neo4j.com"
    overwrite = true
    destination = "production-without-images"
  }

  task s3UploadHtml(type: S3UploadTask) {
    source = "${projectDir}/build/online"
    bucket = "training.neo4j.com"
    overwrite = true
    destination = "production"
  }

  task s3UploadSingleFile(type: S3UploadTask) {
    source = "${projectDir}/build/online/03_SettingUpYourDevelopmentEnvironment.html"
    bucket = "training.neo4j.com"
    overwrite = false
    destination = "single-file"
  }

  task s3UploadMultipleFiles(type: S3UploadTask) {
    source = ["${projectDir}/build/online/01_IntroductionToGraphDatabases.html".toString(), "${projectDir}/build/online/02_IntroductionToNeo4j.html".toString()]
    bucket = "training.neo4j.com"
    overwrite = true
    destination = "multiple-files"
  }

  task s3Upload dependsOn(tasks.names.findAll { it.startsWith("s3Upload") && it != "s3Upload" })
}

